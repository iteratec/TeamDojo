package com.iteratec.teamdojo.test.fixtures;

/**
 * Externalized test fixtures for {@link com.iteratec.teamdojo.web.rest.ImageResourceIT}
 */
public final class ImageResourceFixtures {

    private static final byte[] JPG_BLACK = new byte[] {
        -1,
        -40,
        -1,
        -32,
        0,
        16,
        74,
        70,
        73,
        70,
        0,
        1,
        1,
        1,
        1,
        44,
        1,
        44,
        0,
        0,
        -1,
        -37,
        0,
        67,
        0,
        -1,
        -1,
        -1,
        -1,
        -1,
        -1,
        -1,
        -1,
        -1,
        -1,
        -1,
        -1,
        -1,
        -1,
        -1,
        -1,
        -1,
        -1,
        -1,
        -1,
        -1,
        -1,
        -1,
        -1,
        -1,
        -1,
        -1,
        -1,
        -1,
        -1,
        -1,
        -1,
        -1,
        -1,
        -1,
        -1,
        -1,
        -1,
        -1,
        -1,
        -1,
        -1,
        -1,
        -1,
        -1,
        -1,
        -1,
        -1,
        -1,
        -1,
        -1,
        -1,
        -1,
        -1,
        -1,
        -1,
        -1,
        -1,
        -1,
        -1,
        -1,
        -1,
        -1,
        -1,
        -1,
        -37,
        0,
        67,
        1,
        -1,
        -1,
        -1,
        -1,
        -1,
        -1,
        -1,
        -1,
        -1,
        -1,
        -1,
        -1,
        -1,
        -1,
        -1,
        -1,
        -1,
        -1,
        -1,
        -1,
        -1,
        -1,
        -1,
        -1,
        -1,
        -1,
        -1,
        -1,
        -1,
        -1,
        -1,
        -1,
        -1,
        -1,
        -1,
        -1,
        -1,
        -1,
        -1,
        -1,
        -1,
        -1,
        -1,
        -1,
        -1,
        -1,
        -1,
        -1,
        -1,
        -1,
        -1,
        -1,
        -1,
        -1,
        -1,
        -1,
        -1,
        -1,
        -1,
        -1,
        -1,
        -1,
        -1,
        -1,
        -1,
        -64,
        0,
        17,
        8,
        0,
        1,
        0,
        1,
        3,
        1,
        17,
        0,
        2,
        17,
        1,
        3,
        17,
        1,
        -1,
        -60,
        0,
        20,
        0,
        1,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        3,
        -1,
        -60,
        0,
        20,
        16,
        1,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        -1,
        -60,
        0,
        20,
        1,
        1,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        -1,
        -60,
        0,
        20,
        17,
        1,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        -1,
        -38,
        0,
        12,
        3,
        1,
        0,
        2,
        17,
        3,
        17,
        0,
        63,
        0,
        48,
        127,
        -1,
        -39,
    };

    private static final byte[] JPG_WHITE = new byte[] {
        -1,
        -40,
        -1,
        -32,
        0,
        16,
        74,
        70,
        73,
        70,
        0,
        1,
        1,
        1,
        1,
        44,
        1,
        44,
        0,
        0,
        -1,
        -37,
        0,
        67,
        0,
        -1,
        -1,
        -1,
        -1,
        -1,
        -1,
        -1,
        -1,
        -1,
        -1,
        -1,
        -1,
        -1,
        -1,
        -1,
        -1,
        -1,
        -1,
        -1,
        -1,
        -1,
        -1,
        -1,
        -1,
        -1,
        -1,
        -1,
        -1,
        -1,
        -1,
        -1,
        -1,
        -1,
        -1,
        -1,
        -1,
        -1,
        -1,
        -1,
        -1,
        -1,
        -1,
        -1,
        -1,
        -1,
        -1,
        -1,
        -1,
        -1,
        -1,
        -1,
        -1,
        -1,
        -1,
        -1,
        -1,
        -1,
        -1,
        -1,
        -1,
        -1,
        -1,
        -1,
        -1,
        -1,
        -37,
        0,
        67,
        1,
        -1,
        -1,
        -1,
        -1,
        -1,
        -1,
        -1,
        -1,
        -1,
        -1,
        -1,
        -1,
        -1,
        -1,
        -1,
        -1,
        -1,
        -1,
        -1,
        -1,
        -1,
        -1,
        -1,
        -1,
        -1,
        -1,
        -1,
        -1,
        -1,
        -1,
        -1,
        -1,
        -1,
        -1,
        -1,
        -1,
        -1,
        -1,
        -1,
        -1,
        -1,
        -1,
        -1,
        -1,
        -1,
        -1,
        -1,
        -1,
        -1,
        -1,
        -1,
        -1,
        -1,
        -1,
        -1,
        -1,
        -1,
        -1,
        -1,
        -1,
        -1,
        -1,
        -1,
        -1,
        -1,
        -64,
        0,
        17,
        8,
        0,
        1,
        0,
        1,
        3,
        1,
        17,
        0,
        2,
        17,
        1,
        3,
        17,
        1,
        -1,
        -60,
        0,
        20,
        0,
        1,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        3,
        -1,
        -60,
        0,
        20,
        16,
        1,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        -1,
        -60,
        0,
        20,
        1,
        1,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        -1,
        -60,
        0,
        20,
        17,
        1,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        -1,
        -38,
        0,
        12,
        3,
        1,
        0,
        2,
        17,
        3,
        17,
        0,
        63,
        0,
        64,
        127,
        -1,
        -39,
    };

    private static final byte[] EXPECTED_IMAGE_BLACK = new byte[] {
        -119,
        80,
        78,
        71,
        13,
        10,
        26,
        10,
        0,
        0,
        0,
        13,
        73,
        72,
        68,
        82,
        0,
        0,
        0,
        1,
        0,
        0,
        0,
        1,
        8,
        2,
        0,
        0,
        0,
        -112,
        119,
        83,
        -34,
        0,
        0,
        0,
        12,
        73,
        68,
        65,
        84,
        120,
        -38,
        99,
        96,
        100,
        100,
        4,
        0,
        0,
        10,
        0,
        4,
        89,
        -118,
        90,
        -125,
        0,
        0,
        0,
        0,
        73,
        69,
        78,
        68,
        -82,
        66,
        96,
        -126,
    };

    private static final byte[] EXPECTED_IMAGE_WHITE = new byte[] {
        -119,
        80,
        78,
        71,
        13,
        10,
        26,
        10,
        0,
        0,
        0,
        13,
        73,
        72,
        68,
        82,
        0,
        0,
        0,
        1,
        0,
        0,
        0,
        1,
        8,
        2,
        0,
        0,
        0,
        -112,
        119,
        83,
        -34,
        0,
        0,
        0,
        12,
        73,
        68,
        65,
        84,
        120,
        -38,
        99,
        -8,
        -1,
        -1,
        63,
        0,
        5,
        -2,
        2,
        -2,
        51,
        18,
        -107,
        20,
        0,
        0,
        0,
        0,
        73,
        69,
        78,
        68,
        -82,
        66,
        96,
        -126,
    };

    private static final String DEFAULT_HASH = "A2021C9ED42E09243D51F00D17862BE3";
    private static final String UPDATED_HASH = "08332C69A77B3D73376DF2FC43D9B0C0";

    public static byte[] defaultSmall() {
        return JPG_BLACK;
    }

    public static byte[] updatedSmall() {
        return JPG_WHITE;
    }

    public static byte[] defaultMedium() {
        return JPG_BLACK;
    }

    public static byte[] updatedMedium() {
        return JPG_WHITE;
    }

    public static byte[] defaultLarge() {
        return JPG_BLACK;
    }

    public static byte[] updatedLarge() {
        return JPG_WHITE;
    }

    public static byte[] expectedImageBlack() {
        return EXPECTED_IMAGE_BLACK;
    }

    public static byte[] expectedImageWhite() {
        return EXPECTED_IMAGE_WHITE;
    }

    public static String defaultHash() {
        return DEFAULT_HASH;
    }

    public static String updatedHash() {
        return UPDATED_HASH;
    }
}
