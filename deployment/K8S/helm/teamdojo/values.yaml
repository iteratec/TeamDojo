replicaCount: 1

image:
  repository: docker.io/iteratec/teamdojo
  pullPolicy: IfNotPresent
  # Overrides the image tag whose default is the chart appVersion.
  tag: 2.0.2

imagePullSecrets: []
nameOverride: ""
fullnameOverride: ""

# -- TeamDojo specific application configurations
teamdojo:
  # -- Configures the Spring Boot Application Profile, e.g. "prod,api-docs", "dev"
  profile: "prod,api-docs"
  # -- Configures the JAVA_OPTS
  javaopts: " -Xmx512m -Xms256m"
  metrics:
    prometheus:
      enabled: "false"
  oauth2:
    # -- Must be enabled and configured to integrate TeamDojo witch your OIDC Provider, e.g. keycloak
    enabled: false
    issuerUri:
    clientId:
    clientSecret:
  env:
    - name: SPRING_LIQUIBASE_CONTEXTS
      value: prod,demo

serviceAccount:
  # Specifies whether a service account should be created
  create: false
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

podAnnotations: {}

podSecurityContext: {}
  # fsGroup: 2000

securityContext: {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

service:
  type: ClusterIP
  port: 8080

ingress:
  enabled: false
  annotations: {}
    # kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"
  hosts:
    - host: chart-example.local
      paths:
      - path: /
        backend:
          serviceName: chart-example.local
          servicePort: 80
  tls: []
  #  - secretName: chart-example-tls
  #    hosts:
  #      - chart-example.local

resources: {}
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # requests:
  #   memory: '512Mi'
  #   cpu: '500m'
  # limits:
  #   memory: '1Gi'
  #   cpu: '1'

autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 10
  targetCPUUtilizationPercentage: 80
  targetMemoryUtilizationPercentage: 80

nodeSelector: {}

tolerations: []

affinity: {}

postgresql:
  enabled: true
  auth:
    database: teamdojo
    username: teamdojo
